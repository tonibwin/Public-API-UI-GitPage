[{"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\index.tsx":"1","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\App.tsx":"3","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\components\\public-api-display.tsx":"4","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\components\\information-card.tsx":"5","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\manager\\public-api-manager.ts":"6","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\services\\public-api-service.ts":"7","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\index.tsx":"8","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\reportWebVitals.ts":"9","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\App.tsx":"10","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\components\\public-api-display.tsx":"11","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\components\\information-card.tsx":"12","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\manager\\public-api-manager.ts":"13","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\services\\public-api-service.ts":"14"},{"size":573,"mtime":1689827607294,"results":"15","hashOfConfig":"16"},{"size":440,"mtime":1689826344750,"results":"17","hashOfConfig":"16"},{"size":266,"mtime":1689827607289,"results":"18","hashOfConfig":"16"},{"size":1784,"mtime":1689827607292,"results":"19","hashOfConfig":"16"},{"size":1057,"mtime":1689827607290,"results":"20","hashOfConfig":"16"},{"size":994,"mtime":1689827607298,"results":"21","hashOfConfig":"16"},{"size":427,"mtime":1689827607299,"results":"22","hashOfConfig":"16"},{"size":573,"mtime":1689827607294,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1689826344750,"results":"25","hashOfConfig":"24"},{"size":266,"mtime":1689827607289,"results":"26","hashOfConfig":"24"},{"size":1784,"mtime":1689827607292,"results":"27","hashOfConfig":"24"},{"size":1057,"mtime":1689827607290,"results":"28","hashOfConfig":"24"},{"size":994,"mtime":1689827607298,"results":"29","hashOfConfig":"24"},{"size":427,"mtime":1689827607299,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3cumhu",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ikqycu",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\index.tsx",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\reportWebVitals.ts",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\App.tsx",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\components\\public-api-display.tsx",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\components\\information-card.tsx",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\manager\\public-api-manager.ts",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI\\my-app\\src\\services\\public-api-service.ts",["75"],[],"import EntriesWrapper from \"../dtos/entries-wrapper\";\r\n\r\nclass PublicApiService {\r\n    public static async getCategory(category: string){\r\n        return await fetch(`https://api.publicapis.org/entries?category=${category}`).then(response => {\r\n            return response.json() as Promise<EntriesWrapper>;\r\n        }).catch((err) => {\r\n            throw new Error(err);\r\n        })\r\n    }\r\n}\r\nexport default PublicApiService;","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\index.tsx",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\reportWebVitals.ts",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\App.tsx",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\components\\public-api-display.tsx",["76"],[],"import React, { useState, useEffect } from 'react';\r\nimport PublicApiManager from \"../manager/public-api-manager\";\r\nimport PublicApiDisplayInterface from \"../interfaces/public-api-display-interface\";\r\nimport InformationCard from \"./information-card\";\r\nimport InformationCardInterface from \"../interfaces/information-card-interface\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from '@mui/material/Link';\r\n\r\nfunction PublicApiDisplay({category}:PublicApiDisplayInterface) {\r\n    const [publicApiCards, setPublicApiCards] = useState([] as InformationCardInterface[])\r\n\r\n    useEffect(() => {\r\n        PublicApiManager.getCategory(category)\r\n            .then(e => {\r\n                setPublicApiCards(PublicApiManager.transformEntries(e));\r\n            }).catch(err => {\r\n                throw new Error(err);\r\n            });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\">\r\n                Public APIs\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n                <Link href=\"https://github.com/davemachado/public-api\">Provided by Public APIs</Link>\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n                A collective list of free APIs for use in software and web development\r\n            </Typography>\r\n            {publicApiCards && <Grid container spacing={3} p={3}>\r\n                    {publicApiCards && publicApiCards.map(card => (\r\n                        <Grid item md={4}>\r\n                            <InformationCard info={card.info} link={card.link}/>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default PublicApiDisplay;","C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\components\\information-card.tsx",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\manager\\public-api-manager.ts",[],[],"C:\\Users\\tonib\\IdeaProjects\\Public-API-UI-Page\\my-app\\src\\services\\public-api-service.ts",[],[],{"ruleId":"77","severity":1,"message":"78","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":21,"column":8,"nodeType":"83","endLine":21,"endColumn":10,"suggestions":"84"},"@typescript-eslint/no-unused-vars","'categoriesWrapper' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["85"],{"desc":"86","fix":"87"},"Update the dependencies array to be: [category]",{"range":"88","text":"89"},[896,898],"[category]"]