{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tonib/IdeaProjects/Public-API-UI-Page/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/tonib/IdeaProjects/Public-API-UI-Page/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"C:/Users/tonib/IdeaProjects/Public-API-UI-Page/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/tonib/IdeaProjects/Public-API-UI-Page/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import PublicApiService from\"../services/public-api-service\";var PublicApiManager=/*#__PURE__*/function(){function PublicApiManager(){_classCallCheck(this,PublicApiManager);}_createClass(PublicApiManager,null,[{key:\"getCategory\",value:function(){var _getCategory=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(category){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return PublicApiService.getCategory(category).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(entriesWrapper){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",entriesWrapper===null||entriesWrapper===void 0?void 0:entriesWrapper.entries);case 1:case\"end\":return _context.stop();}},_callee);}));return function(_x2){return _ref.apply(this,arguments);};}());case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}},_callee2);}));function getCategory(_x){return _getCategory.apply(this,arguments);}return getCategory;}()},{key:\"transformEntries\",value:function transformEntries(entries){var infoCards=[];entries.forEach(function(entry){var infoCard={info:[{key:'Name',showKey:false,value:entry.API,variant:'h5'},{key:'Description',showKey:false,value:entry.Description,variant:'subtitle1'}],link:entry.Link};infoCards.push(infoCard);});return infoCards;}}]);return PublicApiManager;}();export default PublicApiManager;","map":{"version":3,"names":["PublicApiService","PublicApiManager","_classCallCheck","_createClass","key","value","_getCategory","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","category","wrap","_callee2$","_context2","prev","next","getCategory","then","_ref","_callee","entriesWrapper","_callee$","_context","abrupt","entries","stop","_x2","apply","arguments","sent","_x","transformEntries","infoCards","forEach","entry","infoCard","info","showKey","API","variant","Description","link","Link","push"],"sources":["C:/Users/tonib/IdeaProjects/Public-API-UI-Page/my-app/src/manager/public-api-manager.ts"],"sourcesContent":["import PublicApiService from \"../services/public-api-service\";\r\nimport Entry from \"../dtos/entry\";\r\nimport InformationCardInterface from \"../interfaces/information-card-interface\";\r\n\r\nclass PublicApiManager {\r\n    public static async getCategory(category: string) {\r\n        return await PublicApiService.getCategory(category)\r\n            .then(async entriesWrapper => {\r\n                return entriesWrapper?.entries;\r\n            });\r\n    }\r\n\r\n    public static transformEntries(entries: Entry[]) {\r\n        let infoCards: InformationCardInterface[] = [];\r\n        entries.forEach(entry => {\r\n            let infoCard: InformationCardInterface = {\r\n                info:[{key:'Name', showKey:false, value: entry.API, variant: 'h5'}, {key:'Description', showKey:false, value: entry.Description, variant: 'subtitle1'}],\r\n                link: entry.Link\r\n            };\r\n            infoCards.push(infoCard);\r\n        });\r\n        return infoCards;\r\n    }\r\n}\r\nexport default PublicApiManager;"],"mappings":"0jBAAA,MAAO,CAAAA,gBAAgB,KAAM,gCAAgC,CAAC,GAIxD,CAAAC,gBAAgB,kCAAAA,iBAAA,EAAAC,eAAA,MAAAD,gBAAA,GAAAE,YAAA,CAAAF,gBAAA,QAAAG,GAAA,eAAAC,KAAA,gBAAAC,YAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAClB,SAAAC,SAAgCC,QAAgB,SAAAH,mBAAA,GAAAI,IAAA,UAAAC,UAAAC,SAAA,iBAAAA,SAAA,CAAAC,IAAA,CAAAD,SAAA,CAAAE,IAAA,SAAAF,SAAA,CAAAE,IAAA,SAC/B,CAAAhB,gBAAgB,CAACiB,WAAW,CAACN,QAAQ,CAAC,CAC9CO,IAAI,6BAAAC,IAAA,CAAAZ,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAW,QAAMC,cAAc,SAAAb,mBAAA,GAAAI,IAAA,UAAAU,SAAAC,QAAA,iBAAAA,QAAA,CAAAR,IAAA,CAAAQ,QAAA,CAAAP,IAAA,gBAAAO,QAAA,CAAAC,MAAA,UACfH,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAEI,OAAO,0BAAAF,QAAA,CAAAG,IAAA,MAAAN,OAAA,GACjC,mBAAAO,GAAA,SAAAR,IAAA,CAAAS,KAAA,MAAAC,SAAA,QAAC,eAAAf,SAAA,CAAAU,MAAA,UAAAV,SAAA,CAAAgB,IAAA,0BAAAhB,SAAA,CAAAY,IAAA,MAAAhB,QAAA,GACT,YAAAO,YAAAc,EAAA,SAAAzB,YAAA,CAAAsB,KAAA,MAAAC,SAAA,UAAAZ,WAAA,OAAAb,GAAA,oBAAAC,KAAA,CAED,SAAA2B,iBAA+BP,OAAgB,CAAE,CAC7C,GAAI,CAAAQ,SAAqC,CAAG,EAAE,CAC9CR,OAAO,CAACS,OAAO,CAAC,SAAAC,KAAK,CAAI,CACrB,GAAI,CAAAC,QAAkC,CAAG,CACrCC,IAAI,CAAC,CAAC,CAACjC,GAAG,CAAC,MAAM,CAAEkC,OAAO,CAAC,KAAK,CAAEjC,KAAK,CAAE8B,KAAK,CAACI,GAAG,CAAEC,OAAO,CAAE,IAAI,CAAC,CAAE,CAACpC,GAAG,CAAC,aAAa,CAAEkC,OAAO,CAAC,KAAK,CAAEjC,KAAK,CAAE8B,KAAK,CAACM,WAAW,CAAED,OAAO,CAAE,WAAW,CAAC,CAAC,CACvJE,IAAI,CAAEP,KAAK,CAACQ,IAChB,CAAC,CACDV,SAAS,CAACW,IAAI,CAACR,QAAQ,CAAC,CAC5B,CAAC,CAAC,CACF,MAAO,CAAAH,SAAS,CACpB,CAAC,WAAAhC,gBAAA,KAEL,cAAe,CAAAA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}