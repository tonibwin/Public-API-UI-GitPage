{"ast":null,"code":"class PublicApiService {\n  static async getCategory(category) {\n    return await fetch(`https://api.publicapis.org/entries?category=${category}`).then(response => {\n      return response.json();\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n  static async getEntries() {\n    return await fetch(`https://api.publicapis.org/entries`).then(response => {\n      return response.json();\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n  static async getCategories() {\n    return await fetch(`https://api.publicapis.org/categories`).then(response => {\n      return response.json();\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n}\nexport default PublicApiService;","map":{"version":3,"names":["PublicApiService","getCategory","category","fetch","then","response","json","catch","err","Error","getEntries","getCategories"],"sources":["C:/Users/tonib/IdeaProjects/Public-API-UI/my-app/src/services/public-api-service.ts"],"sourcesContent":["import EntriesWrapper from \"../dtos/entries-wrapper\";\r\nimport CategoriesWrapper from \"../dtos/categories-wrapper\";\r\nimport categoriesWrapper from \"../dtos/categories-wrapper\";\r\n\r\nclass PublicApiService {\r\n    public static async getCategory(category: string){\r\n        return await fetch(`https://api.publicapis.org/entries?category=${category}`).then(response => {\r\n            return response.json() as Promise<EntriesWrapper>;\r\n        }).catch((err) => {\r\n            throw new Error(err);\r\n        })\r\n    }\r\n\r\n    public static async getEntries(){\r\n        return await fetch(`https://api.publicapis.org/entries`).then(response => {\r\n            return response.json() as Promise<EntriesWrapper>;\r\n        }).catch((err) => {\r\n            throw new Error(err);\r\n        })\r\n    }\r\n\r\n    public static async getCategories(){\r\n        return await fetch(`https://api.publicapis.org/categories`).then(response => {\r\n            return response.json() as Promise<CategoriesWrapper>;\r\n        }).catch((err) => {\r\n            throw new Error(err);\r\n        })\r\n    }\r\n}\r\nexport default PublicApiService;"],"mappings":"AAIA,MAAMA,gBAAgB,CAAC;EACnB,aAAoBC,WAAWA,CAACC,QAAgB,EAAC;IAC7C,OAAO,MAAMC,KAAK,CAAE,+CAA8CD,QAAS,EAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;MAC3F,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;MACd,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;IACxB,CAAC,CAAC;EACN;EAEA,aAAoBE,UAAUA,CAAA,EAAE;IAC5B,OAAO,MAAMP,KAAK,CAAE,oCAAmC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACtE,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;MACd,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;IACxB,CAAC,CAAC;EACN;EAEA,aAAoBG,aAAaA,CAAA,EAAE;IAC/B,OAAO,MAAMR,KAAK,CAAE,uCAAsC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACzE,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;MACd,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;IACxB,CAAC,CAAC;EACN;AACJ;AACA,eAAeR,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}