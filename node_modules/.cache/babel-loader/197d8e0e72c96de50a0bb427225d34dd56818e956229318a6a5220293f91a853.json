{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tonib\\\\IdeaProjects\\\\Public-API-UI\\\\my-app\\\\src\\\\components\\\\public-api-display.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PublicApiManager from \"../manager/public-api-manager\";\nimport InformationCard from \"./information-card\";\nimport Grid from '@mui/material/Grid';\nimport Typography from \"@mui/material/Typography\";\nimport Link from '@mui/material/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PublicApiDisplay(_ref) {\n  _s();\n  let {\n    category\n  } = _ref;\n  const [publicApiCards, setPublicApiCards] = useState([]);\n  useEffect(() => {\n    PublicApiManager.getCategory(category).then(e => {\n      setPublicApiCards(PublicApiManager.transformEntries(e));\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Public APIs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"https://github.com/davemachado/public-api\",\n        children: \"Provided by Public APIs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: \"A collective list of free APIs for use in software and web development\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), publicApiCards && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      p: 3,\n      children: publicApiCards && publicApiCards.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(InformationCard, {\n          info: card.info,\n          link: card.link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(PublicApiDisplay, \"l/g5zpRzDwhwnQGDRNcnDAThOEk=\");\n_c = PublicApiDisplay;\nexport default PublicApiDisplay;\nvar _c;\n$RefreshReg$(_c, \"PublicApiDisplay\");","map":{"version":3,"names":["React","useState","useEffect","PublicApiManager","InformationCard","Grid","Typography","Link","jsxDEV","_jsxDEV","PublicApiDisplay","_ref","_s","category","publicApiCards","setPublicApiCards","getCategory","then","e","transformEntries","catch","err","Error","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","href","container","spacing","p","map","card","item","md","info","link","_c","$RefreshReg$"],"sources":["C:/Users/tonib/IdeaProjects/Public-API-UI/my-app/src/components/public-api-display.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PublicApiManager from \"../manager/public-api-manager\";\r\nimport PublicApiDisplayInterface from \"../interfaces/public-api-display-interface\";\r\nimport InformationCard from \"./information-card\";\r\nimport InformationCardInterface from \"../interfaces/information-card-interface\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from '@mui/material/Link';\r\n\r\nfunction PublicApiDisplay({category}:PublicApiDisplayInterface) {\r\n    const [publicApiCards, setPublicApiCards] = useState([] as InformationCardInterface[])\r\n\r\n    useEffect(() => {\r\n        PublicApiManager.getCategory(category)\r\n            .then(e => {\r\n                setPublicApiCards(PublicApiManager.transformEntries(e));\r\n            }).catch(err => {\r\n                throw new Error(err);\r\n            });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\">\r\n                Public APIs\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n                <Link href=\"https://github.com/davemachado/public-api\">Provided by Public APIs</Link>\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n                A collective list of free APIs for use in software and web development\r\n            </Typography>\r\n            {publicApiCards && <Grid container spacing={3} p={3}>\r\n                    {publicApiCards && publicApiCards.map(card => (\r\n                        <Grid item md={4}>\r\n                            <InformationCard info={card.info} link={card.link}/>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default PublicApiDisplay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAE5D,OAAOC,eAAe,MAAM,oBAAoB;AAEhD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,gBAAgBA,CAAAC,IAAA,EAAuC;EAAAC,EAAA;EAAA,IAAtC;IAACC;EAAkC,CAAC,GAAAF,IAAA;EAC1D,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAgC,CAAC;EAEtFC,SAAS,CAAC,MAAM;IACZC,gBAAgB,CAACa,WAAW,CAACH,QAAQ,CAAC,CACjCI,IAAI,CAACC,CAAC,IAAI;MACPH,iBAAiB,CAACZ,gBAAgB,CAACgB,gBAAgB,CAACD,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,CAACE,KAAK,CAACC,GAAG,IAAI;MACZ,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;IACxB,CAAC,CAAC;EAEV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAAc,QAAA,gBACId,OAAA,CAACH,UAAU;MAACkB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAEzB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbnB,OAAA,CAACH,UAAU;MAACkB,OAAO,EAAC,WAAW;MAAAD,QAAA,eAC3Bd,OAAA,CAACF,IAAI;QAACsB,IAAI,EAAC,2CAA2C;QAAAN,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eACbnB,OAAA,CAACH,UAAU;MAACkB,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAC;IAEhC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACZd,cAAc,iBAAIL,OAAA,CAACJ,IAAI;MAACyB,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,CAAC,EAAE,CAAE;MAAAT,QAAA,EAC3CT,cAAc,IAAIA,cAAc,CAACmB,GAAG,CAACC,IAAI,iBACtCzB,OAAA,CAACJ,IAAI;QAAC8B,IAAI;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eACbd,OAAA,CAACL,eAAe;UAACiC,IAAI,EAAEH,IAAI,CAACG,IAAK;UAACC,IAAI,EAAEJ,IAAI,CAACI;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEd;AAAChB,EAAA,CAlCQF,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AAmCzB,eAAeA,gBAAgB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}